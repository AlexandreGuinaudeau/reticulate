% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/python.R
\name{[<-.python.builtin.object}
\alias{[<-.python.builtin.object}
\alias{py_set_item}
\title{Set an item for a Python object}
\usage{
\method{[}{python.builtin.object}(x, ...) <- value

py_set_item(x, name, value)
}
\arguments{
\item{x}{A Python object.}

\item{value}{The item value.}

\item{name}{The item name.}
}
\value{
The (mutated) object \code{x}, invisibly.
}
\description{
Set an item on a Python object, similar to how
\code{x[name] = value} might be used in Python code to
set an item called \code{name} with value \code{value} on object
\code{x}. The object's \verb{__setitem__} method will be called.
}
\note{
Assigning \code{value} of \code{NULL} calls \code{\link[=py_del_item]{py_del_item()}}. To set an item
value of \code{None}, you can call \code{py_set_item()} directly, or call
\code{x[key] <- py_none()}

See examples in \code{\link[=py_get_item]{py_get_item()}} for different ways to supply \code{key} to
\link{...}.
}
\seealso{
Other item-related APIs: 
\code{\link{[.python.builtin.object}()},
\code{\link{py_del_item}()}

Other item-related APIs: 
\code{\link{[.python.builtin.object}()},
\code{\link{py_del_item}()}
}
\concept{item-related APIs}
